@model LMS_Learning_Management_System.Models.Mixed_VTeacher_Sales_Cards

@{
    ViewData["Title"] = "عرض البطاقات المباعة";
}

<h1>المحتويات</h1>
<label for="searchInput">البحث:</label>
<input type="text" id="searchInput" />
<br />
<form asp-action="GetData" id="myForm">

    <label for="startDate">تاريخ البداية:</label>
    <input asp-for="startDate" type="date" id="startDate" />

    <label for="endDate">تاريخ النهاية:</label>
    <input asp-for="endDate" type="date" id="endDate" />
    
    <label for="teacherName">اسم المعلم:</label>
    <select asp-for="teacherName" id="teacherName" asp-items="ViewBag.TeacherId">
        <option value="">-- أختر --</option>
    </select>

    <label for="subject">المادة:</label>
    <select asp-for="subject1" id="subject" asp-items="ViewBag.SubjectId">
        <option value="">-- أختر --</option>

    </select>


    <button class="btn btn-primary" id="searchButton">بحث</button>
</form>


<table id="myTable" class="table table-striped table-bordered table-inverse table-responsive ">
    <thead>
        <tr class="table-warning">

            <th>
                رقم البطاقة
            </th>
            <th>
                قيمة البطاقة الكلية
            </th>
            <th>
                عدد مواد البطاقة
            </th>
            <th>
                القيمة النهائية لكل مادة
            </th>
            @*<th>
                    اسم المستخدم
                </th>*@

            <th>
                الاسم الكامل
            </th>
            <th>
                الموضوع
            </th>
            <th>
                الصف
            </th>

            <th>
                القيمة
            </th>
            <th>
                مدفوع؟
            </th>
            <th>
                اسم الطالب
            </th>
            <th>
                تاريخ التسجيل
            </th>

            <th>
                <input type="checkbox" id="selectAllCheckbox" />
            </th>

        </tr>
    </thead>
    <tbody>
        @{
            if (Model.Teacher_Sales_Cards_Collection != null && Model.Teacher_Sales_Cards_Collection.Any())
            {
                @foreach (var item in Model.Teacher_Sales_Cards_Collection)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CardNo)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.CardPrice)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.NumberOfSubjects)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.TeacherCardPrice)
                        </td>

                        @*<td>
                                @Html.DisplayFor(modelItem => item.UserName)
                            </td>*@

                        <td>
                            @Html.DisplayFor(modelItem => item.TeacherName)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Subject)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Class)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.PaymentAmount)
                        </td>

                        @{ if (item.IsPayment == true)
                            {
                                <td style="color:greenyellow">
                                    مدفوع
                                </td>
                            }
                            else
                            {
                                <td style="color:orangered">

                                    غير مدفوع
                                </td>
                            }

                        }

                        <td>
                            @Html.DisplayFor(modelItem => item.StudentName)
                        </td>
                        <td>
                            @*@Html.DisplayFor(modelItem => item.CreatedDate)*@
                            @item.CreatedDate.ToShortDateString()
                        </td>
                        <td style="display:none">
                            @Html.DisplayFor(modelItem => item.CardSer)
                            @*<input type="hidden" value="@item.CardSer" id="CardSer" />*@
                        </td>
                        <td>
                            @{ if (item.IsPayment == true)
                                {

                                }
                                else
                                {


                                    <input type="checkbox" class="select-row-checkbox" />

                                }
                            }
                        </td>
                    </tr>
                }

            }
            else
            {
                <p>لا يوجد بيانات</p>
            }
        }
    </tbody>
</table>
<br />
<button class="btn btn-primary" id="deliverSelectedRows">تسليم المحدد</button>

<script src="~/js/jquery3.3.1.js"></script>
<script>

    $(document).ready(function () {

        // Add an event listener for keyup on the search input
        $("#searchInput").on("keyup", function () {
            // Get the value from the search input and convert to lowercase
            var value = $(this).val().toLowerCase();

            // Filter the rows in the table body
            $("#myTable tbody tr").filter(function () {
                // Toggle the visibility of each row based on the search value
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });
   

        // تحديد الكل
        $("#selectAllCheckbox").on("change", function () {
            $(".select-row-checkbox").prop("checked", $(this).prop("checked"));
        });

        // تحديد الصف الحالي
        $(".select-row-checkbox").on("change", function () {
            $("#selectAllCheckbox").prop("checked", false);
        });

        // زر تسليم
        $("#deliverSelectedRows").on("click", function () {
            // جمع الصفوف المحددة
            var selectedRows = $(".select-row-checkbox:checked");

            // التحقق من وجود صفوف محددة
            if (selectedRows.length === 0) {
                alert("الرجاء تحديد صفوف قبل النقر على زر 'تسليم'");
                return;
            }

            // قم بتنفيذ الإجراء المناسب لتسليم الصفوف المحددة
            var cardno = selectedRows.map(function () {
                return $(this).closest("tr").find("td:first-child").text(); // تحديد العنصر الذي يمثل الهوية
            }).get();
            var amount = selectedRows.map(function () {
                return $(this).closest("tr").find("td:eq(3)").text(); // تحديد العنصر amount
            }).get();
            var CardSer = selectedRows.map(function () {
                return $(this).closest("tr").find("td:eq(11)").text(); // تحديد العنصر الذي يمثل الهوية
            }).get();
            // إذا كنت تستخدم ASP.NET Core، يمكنك إرسال طلب AJAX باستخدام $.post
            $.post("/TeacherCardsSales/Pay", { cardno: cardno, CardSer: CardSer, amount: amount }, function (data) {
                // قم بمعالجة الاستجابة من الخادم إذا لزم الأمر
                //alert(data.message); // قد تكون رسالة نجاح أو أي نوع آخر من الرسائل

                window.location.reload();
            });

            // إذا كنت تستخدم ASP.NET MVC، يمكنك إرسال البيانات باستخدام $.ajax مباشرة وتكوين الطلب حسب احتياجاتك
        });

        $("#searchByDateRange").on("click", function () {
            var startDateValue = $("#startDate").val();
            var endDateValue = $("#endDate").val();

            // التحقق من أن الحقول غير فارغة
            if (!startDateValue || !endDateValue) {
                alert("الرجاء إدخال تاريخ البداية وتاريخ النهاية");
                return;
            }

            // قم بتنفيذ البحث بناءً على نطاق التاريخ
            $.post("/TeacherCardsSales/SearchByDateRange", { startDate: startDateValue, endDate: endDateValue }, function (data) {
                // تحديث جدول البيانات بناءً على النتائج المسترجعة
                $("#dataTable tbody").empty(); // حذف البيانات الحالية
                $.each(data, function (index, item) {
                    $("#dataTable tbody").append("<tr><td>" + item.CardNumber + "</td><td>" + item.SaleDate + "</td></tr>");
                    // ... (قم بإضافة الأعمدة الأخرى حسب الحاجة)
                });
            });
        });
        //// زر البحث

        //$('#searchButton').on('click', function () {
        //    // جلب قيم حقول البحث
        //    var startDate = $('#startDate').val();
        //    var endDate = $('#endDate').val();
        //    var teacherName = $('#teacherName').val();
        //    var subject = $('#subject').val();

        //    //var searchData = {
        //    //    startDate: startDate,
        //    //    endDate: endDate,
        //    //    teacherName: teacherName,
        //    //    subject: subject
        //    //};

        //    $.ajax({
        //        url: "/TeacherCardsSales/GetData",
        //        type: "GET",
        //        data: {},
        //        success: function (response) {
        //            // تحديث الجدول باستخدام البيانات الجديدة
        //            updateTable(response);

        //        },
        //        error: function (error) {
        //            console.error('حدث خطأ: ', error);
        //        }
        //    });


        //});
    });
    function updateTable(data) {
        var tbody = $('#dataTable tbody');
        tbody.empty();

        for (var i = 0; i < data.length; i++) {
            var row = '<tr>' +
                // الأعمدة هنا
                '</tr>';

            tbody.append(row);
        }
    }

    //document.getElementById('searchButton').addEventListener('click', function () {
    //    // جلب قيم حقول البحث
    //    var startDate = document.getElementById('startDate').value;
    //    var endDate = document.getElementById('endDate').value;
    //    var teacherName = document.getElementById('teacherName').value;
    //    var subject = document.getElementById('subject').value;

    //    // يمكنك إرسال هذه القيم إلى الخادم أو استخدامها محليًا في تنفيذ بحثك
    //    performSearch(startDate, endDate, teacherName, subject);
    //});

    //function performSearch(startDate, endDate, teacherName, subject) {
    //    // هنا يمكنك كتابة الكود الخاص بك لتنفيذ البحث باستخدام القيم المستلمة
    //    // على سبيل المثال، يمكنك استخدام AJAX لإرسال هذه القيم إلى الخادم واسترجاع النتائج
    //    // أو يمكنك تنفيذ البحث محليًا على جهاز العميل (المتصفح).

    //    // على سبيل المثال:
    //    console.log('تم البحث باستخدام التواريخ: ', startDate, endDate);
    //    console.log('تم البحث باستخدام اسم المعلم: ', teacherName);
    //    console.log('تم البحث باستخدام اسم المادة: ', subject);
    //}


</script>