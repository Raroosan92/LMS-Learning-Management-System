@model Login
@{
    ViewData["Title"] = "تسجيل الدخول";
}
<style>

    /************animation*****/

    .circles {
        position: relative;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
    }

        .circles li {
            position: absolute;
            z-index: 9;
            display: block;
            list-style: none;
            width: 20px;
            height: 20px;
            background: rgba(255, 255, 255, 0.2);
            animation: animate 25s linear infinite;
            bottom: -150px;
        }

            .circles li:nth-child(1) {
                left: 25%;
                width: 40px;
                height: 40px;
                animation-delay: 0s;
            }

            .circles li:nth-child(2) {
                left: 10%;
                width: 20px;
                height: 20px;
                animation-delay: 2s;
                animation-duration: 12s;
            }

            .circles li:nth-child(3) {
                left: 70%;
                width: 20px;
                height: 20px;
                animation-delay: 4s;
            }

            .circles li:nth-child(4) {
                left: 40%;
                width: 35px;
                height: 35px;
                animation-delay: 0s;
                animation-duration: 18s;
            }

            .circles li:nth-child(5) {
                left: 65%;
                width: 20px;
                height: 20px;
                animation-delay: 0s;
            }

            .circles li:nth-child(6) {
                left: 75%;
                width: 30px;
                height: 30px;
                animation-delay: 3s;
            }

            .circles li:nth-child(7) {
                left: 35%;
                width: 35px;
                height: 35px;
                animation-delay: 7s;
            }

            .circles li:nth-child(8) {
                left: 50%;
                width: 25px;
                height: 25px;
                animation-delay: 15s;
                animation-duration: 45s;
            }

            .circles li:nth-child(9) {
                left: 20%;
                width: 15px;
                height: 15px;
                animation-delay: 2s;
                animation-duration: 35s;
            }

            .circles li:nth-child(10) {
                left: 85%;
                width: 35px;
                height: 35px;
                animation-delay: 0s;
                animation-duration: 11s;
            }

    @@keyframes animate {
        0% {
            transform: translateY(0) rotate(0deg);
            opacity: 1;
            border-radius: 0;
        }

        100% {
            transform: translateY(-1000px) rotate(720deg);
            opacity: 0;
            border-radius: 50%;
        }
    }
    /***********************************/


    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        /* min-height: 100vh; */
        /* display: flex; */
        /* align-items: center; */
        /* justify-content: center; */
        background-position: center;
        background-size: cover;
        background-image: url(https://images.unsplash.com/photo-1618005198920-f0cb6201c115?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80);
        /* background-color: #ececec; */
    }

    .wrapper {
        position: relative;
        max-width: 470px;
        width: 100%;
        border-radius: 12px;
        padding: 20px 30px 120px;
        background: rgb(1 197 196 / 51%);
        box-shadow: 0 5px 10px rgba( 0, 0, 0, 0.1 );
        overflow: hidden;
        backdrop-filter: saturate(180%) blur(8px);
    }

    .form.login {
        position: absolute;
        left: 50%;
        bottom: -86%;
        transform: translateX( -50% );
        width: calc( 100% + 220px );
        padding: 20px 140px;
        border-radius: 50%;
        height: 100%;
        background: #030f4a;
        transition: all 0.6s ease;
        color: white;
        border: 7px solid #31e5e4;
    }

    .wrapper.active
    .form.login {
        bottom: -15%;
        border-radius: 35%;
        box-shadow: 0 -5px 10px rgba(0, 0, 0, 0.1);
    }

    .form
    header {
        font-size: 30px;
        text-align: center;
        color: #fff;
        font-weight: 600;
        cursor: pointer;
    }

    .form.login
    header {
        color: #fff;
        opacity: 0.6;
    }

    .wrapper.active
    .form.login
    header {
        opacity: 1;
    }

    .wrapper.active
    .signup
    header {
        opacity: 0.6;
    }

    .wrapper
    form {
        display: flex;
        flex-direction: column;
        gap: 20px;
        margin-top: 40px;
    }

    form
    input {
        outline: none;
        margin: 6px 0px;
        padding: 0 15px;
        font-size: 15px;
        font-weight: 400;
        color: #333;
        border-radius: 8px;
        background: #fff;
        box-shadow: -10px -10px 14px rgba(255, 255, 255, 0.3), 10px 10px 15px rgba(70, 70, 70, 0.15), inset -10px -10px 15px rgba(255, 255, 255, 0.3), inset 10px 10px 15px rgba(70, 70, 70, 0.15);
        border: 1px solid #05b5b4de;
    }

    .form.login
    input {
        border: 1px solid #303030;
        box-shadow: -10px -10px 14px rgb(27 22 86 / 30%), 10px 10px 15px rgb(61 88 151 / 15%), inset -10px -10px 15px rgb(108 136 233 / 30%), inset 10px 10px 15px rgb(21 48 106 / 15%);
    }

        .form.login
        input:focus {
            box-shadow: 0 1px 0 #ddd;
        }

    form
    .checkbox {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .checkbox
    input[type="checkbox"] {
        height: 16px;
        width: 16px;
        accent-color: #fff;
        cursor: pointer;
    }

    form
    .checkbox
    label {
        cursor: pointer;
        color: #fff;
    }

    form a {
        color: #afaeae;
        text-decoration: none;
    }

        form
        a:hover {
            text-decoration: underline;
        }

    form
    input[type="submit"] {
        margin-top: 15px;
        padding: none;
        font-size: 18px;
        font-weight: 500;
        cursor: pointer;
    }

    .form.login
    input[type="submit"] {
        background: #01c5c4;
        color: #fff;
        border: none;
    }

    .bg-white {
        --bs-bg-opacity: 1;
        background-color: rgb(255 255 255 / 34%) !important;
    }
</style>
<style>

    .marquee-container {
        position: relative;
        width: 80%; /* Adjust the width as needed */
        margin: 0 auto; /* Center the container horizontally */
        overflow: hidden;
    }

    .marquee {
        display: inline-block;
        white-space: nowrap;
        animation: marquee 30s linear infinite;
        z-index: -6;
        position: relative;
    }

        .marquee p {
            display: inline-block;
        }

    .marquee-label {
        position: absolute;
        top: 0;
    }

    .left-label {
        left: 0;
        background: red;
        width: 9%;
        text-align-last: center;
        border-radius: 6px;
        color: white;
        height: 34px;
        align-content: center;
    }

    .right-label {
        right: 0;
        background: red;
        width: 9%;
        text-align-last: center;
        border-radius: 6px;
        color: white;
        height: 34px;
        align-content: center;
    }

    @@keyframes marquee {
        0% {
            transform: translateX(-120%);
        }

        100% {
            transform: translateX(100%);
        }
    }

    @@media only screen and (max-width: 600px) {
        .marquee-container {
            position: relative;
            width: 100%; /* Adjust the width as needed */
            margin: 0 auto; /* Center the container horizontally */
            overflow: hidden;
        }

        .marquee {
            display: inline-block;
            white-space: nowrap;
            animation: marquee 30s linear infinite;
            z-index: -3;
            position: relative;
        }

            .marquee p {
                display: inline-block;
            }

        .marquee-label {
            position: absolute;
            top: 0;
        }

        .left-label {
            left: 0;
            background: red;
            width: 16%;
            text-align-last: center;
            border-radius: 6px;
            color: white;
            height: 34px;
            align-content: center;
        }

        .right-label {
            right: 0;
            background: red;
            width: 16%;
            text-align-last: center;
            border-radius: 6px;
            color: white;
            height: 34px;
            align-content: center;
        }

        @@keyframes marquee {
            0% {
                transform: translateX(-40%);
            }

            100% {
                transform: translateX(100%);
            }
        }
    }


</style>
<style>
    .position-relative {
        position: relative;
    }

    .toggle-password {
        position: absolute;
        top: 50%;
        right: 361px;
        transform: translateY(-50%);
        border: none;
        background-color: transparent;
    }
    @@media only screen and (max-width: 600px) {
        .toggle-password {
            position: absolute;
            top: 50%;
            right: 210px;
            transform: translateY(-50%);
            border: none;
            background-color: transparent;
        }
    }

        .toggle-password:focus {
            outline: none;
        }

        .toggle-password i {
            cursor: pointer;
        }
</style>


<div class="marquee-container" onmouseover="stopMarquee()" onmouseout="startMarquee()">
    <span class="marquee-label left-label">تحذير!</span>
    <div class="marquee">
        <p>نرجو منك الدخول من نفس الجهاز في كل مرة، حيث أنه في حال تغيّر الجهاز، قد لا تتمكن من الدخول</p>
    </div>
    <span class="marquee-label right-label">تحذير!</span>
</div>



<!--dust particel-->
<ul class="circles">
    <li></li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
</ul>
<!--Dust particle end--->
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <section class="wrapper my-5 mx-auto login header">
                <div class="form signup">

                    <header>تسجيل الدخول</header>
                    @if (TempData.ContainsKey("AlertMessage"))
                    {
                        <div class="alert alert-danger">
                            @TempData["AlertMessage"]
                        </div>
                    }
                    <div class="text-danger" asp-validation-summary="All"></div>

                    <form asp-action="Login" method="post">
                        <input type="hidden" asp-for="ReturnUrl" />
                        <div class="form-group">
                            <label asp-for="PhoneNumber"></label>
                            <input asp-for="PhoneNumber" class="form-control" style="direction:ltr" />
                        </div>
                        <div class="form-group">
                            <label asp-for="Password"></label>
                            <div class="position-relative">
                                <input asp-for="Password" class="form-control" type="password" id="passwordInput" />
                                <button class="btn btn-outline-secondary toggle-password" type="button">
                                    <i class="fa fa-eye"></i>
                                </button>
                            </div>
                        </div>


                        <div class="form-group">
                            تذكرني؟ <input type="checkbox" asp-for="Remember" />
                        </div>
                        <input type="hidden" asp-for="devicetype" />
                        <input type="hidden" asp-for="clientIpAddress" id="clientIpAddress2" name="clientIpAddress" />

                        <br />



                        <button class="btn btn-primary" type="submit">تسجيل الدخول</button>
                        @*<a class="btn btn-info" asp-action="GoogleLogin">Log In With Google</a>*@
                        <a class="btn btn-warning" asp-controller="Admin" asp-action="create">انشاء مستخدم جديد</a>
                        <button class="btn btn-danger" id="showInfoButton">تعليمات التسجيل في المنصة</button>


                        @*<a class="btn btn-secondary" asp-action="ForgotPassword">نسيت كلمة المرور؟</a>*@
                    </form>
                </div>

            </section>
        </div>
    </div>

</div>

<script src="~/js/jquery3.3.1.js"></script>
@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js">
</script>*@

@* <script src="https://cdnjs.cloudflare.com/ajax/libs/fingerprintjs2/2.1.0/fingerprint2.min.js"></script>
<script>
    // Function to generate a device fingerprint
    function generateDeviceFingerprint() {
        var fingerprint = '';
        // Collect device-specific information
        var platform = navigator.platform;
        var screenResolution = screen.width + 'x' + screen.height;
        var hardwareConcurrency = navigator.hardwareConcurrency || 'N/A'; // Number of logical processor cores available
        var deviceMemory = navigator.deviceMemory || 'N/A'; // Amount of device memory in gigabytes
        // Concatenate the collected information
        fingerprint = platform + screenResolution + hardwareConcurrency + deviceMemory;
        // Hash the fingerprint to make it less identifiable
        fingerprint = hashString(fingerprint); // You'll need a hashing function like SHA-256
        return fingerprint;
    }

    // Function to hash a string (SHA-256 example)
    function hashString(str) {
        var hash = 0, i, chr;
        if (str.length === 0) return hash;
        for (i = 0; i < str.length; i++) {
            chr = str.charCodeAt(i);
            hash = ((hash << 5) - hash) + chr;
            hash |= 0; // Convert to 32bit integer
        }
        return hash;
    }

    // Generate the device fingerprint
    var deviceFingerprint = generateDeviceFingerprint();
    //alert("Device Fingerprint: " + deviceFingerprint); // Display device fingerprint
    $('#clientIpAddress2').val(deviceFingerprint);
</script> *@
<script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js"></script>
<script>
    $(document).ready(function () {
        function generateDeviceFingerprint() {
            // Collect data points
            
            var screenResolution = screen.width + "x" + screen.height;
            // var timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
            var platform = navigator.platform;
            // Additional data points
            var cpuCores = navigator.hardwareConcurrency || "Unknown";
            var memory = navigator.deviceMemory || (navigator.hardwareConcurrency ? navigator.hardwareConcurrency : "Unknown");
            // var pluginsLength = navigator.plugins.length || "Unknown";
            // Concatenate data points
            // var data = userAgent + screenResolution + timezone + platform + language + canvasData;
            var data =  platform + cpuCores + memory;

          

            // Hash the concatenated data
            var fingerprint = CryptoJS.SHA256(data).toString(CryptoJS.enc.Hex);
            return fingerprint;
        }

        var fingerprint = generateDeviceFingerprint();
        // alert("Fingerprint: "+ fingerprint);

        $('#clientIpAddress2').val(fingerprint);

        // // Optionally store in localStorage
        // localStorage.setItem('fingerprint', fingerprint);
        // alert(localStorage.getItem('fingerprint'))

        // // Check fingerprint on subsequent visits
        // if (localStorage.getItem('fingerprint') === fingerprint) {
        //     alert("Fingerprint matches.");
        // } else {
        //     alert("New fingerprint generated.");
        // }
    });
</script>
<script>

    // var fingerprint = '';

    // // Collect various browser and device information
    // var userAgent = navigator.userAgent;
    // var language = navigator.language;
    // var platform = navigator.platform;
    // var plugins = Array.from(navigator.plugins).map(plugin => plugin.name).join(',');
    // var screenResolution = screen.width + 'x' + screen.height;
    // var timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;

    // // Concatenate the collected information
    // fingerprint = userAgent + language + platform + plugins + screenResolution + timeZone;

    // // Hash the fingerprint to make it less identifiable
    // alert(fingerprint);



    // // Generate fingerprint using FingerprintJS2
    // function generateFingerprint() {
    //     return new Promise((resolve, reject) => {
    //         Fingerprint2.get((components) => {
    //             const fingerprint = Fingerprint2.x64hash128(components.map(pair => pair.value).join(), 31);
    //             resolve(fingerprint);
    //         });
    //     });
    // }

    // // Call the function to generate fingerprint
    // generateFingerprint().then((fingerprint) => {
    //     // Use the fingerprint as needed
    //     alert('Device fingerprint (excluding browser): ' + fingerprint);
    //     console.log('Device fingerprint (excluding browser):', fingerprint);
    // });




    // /* Add "https://api.ipify.org?format=json" to
    // get the IP Address of user*/
    // $(document).ready(() => {
    //     $.getJSON("https://api.ipify.org?format=json",
    //         function (data) {
    //             // Displayin IP address on screen
    //             $('#clientIpAddress2').val(data.ip);

    //             // var deviceId = generateUUID(); // Generate a unique identifier for the device
    //             // $('#clientIpAddress2').val(deviceId);
    //             // alert(deviceId);

    //         })
    // });


    // function generateUUID() {
    //     // Implementation of UUID generation goes here
    //     // Here's a simple example using Math.random():
    //     return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    //         var r = Math.random() * 16 | 0,
    //             v = c == 'x' ? r : (r & 0x3 | 0x8);
    //         return v.toString(16);
    //     });
    // }
</script>

<script>
    $(document).ready(function () {
        // JavaScript code to detect the device type and submit it to the server
        function getDeviceType() {
            const userAgent = navigator.userAgent;

            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent)) {



                return 'Mobile';

            } else if (/iPad/i.test(userAgent)) {


                return 'iPad';  // You may choose to distinguish between iPad and other tablets
            } else {

                return 'Desktop';
            }
        }
        const deviceType = getDeviceType();
        $('#devicetype').val(deviceType);
        //// Example: Get the device type and submit it to the server
        //const deviceType = getDeviceType();

        //// Create a hidden form dynamically
        //const form = document.createElement('form');

        ////form.method = 'post';
        ////form.action = 'Login'; // Replace with your actual endpoint
        ////alert(form)

        //// Create a hidden input field for the device type
        //const input = document.createElement('input');
        //input.type = 'hidden';
        //input.name = 'deviceType';
        //input.value = deviceType;
        //alert(deviceType)

        //// Append the input field to the form
        //form.appendChild(input);

        //// Append the form to the document body
        //document.body.appendChild(form);

        ////// Submit the form
        ////form.submit();
    });

    const wrapper = document.querySelector(".wrapper"),
        signupHeader = document.querySelector(".signup header"),
        loginHeader = document.querySelector(".login header");
    loginHeader.addEventListener("click", () => {
        wrapper.classList.add("active");
    });
    signupHeader.addEventListener("click", () => {
        wrapper.classList.remove("active");
    });



</script>

<script>
    $(document).ready(function () {
        $('.toggle-password').on('click', function () {
            var passwordField = $('#passwordInput');
            var passwordFieldType = passwordField.attr('type');

            if (passwordFieldType === 'password') {
                passwordField.attr('type', 'text');
                $(this).find('i').removeClass('fa-eye').addClass('fa-eye-slash');
            } else {
                passwordField.attr('type', 'password');
                $(this).find('i').removeClass('fa-eye-slash').addClass('fa-eye');
            }
        });
    });
</script>
<script>
    function stopMarquee() {
        var marqueeElements = document.querySelectorAll('.marquee');
        marqueeElements.forEach(function (element) {
            element.style.animationPlayState = 'paused';
        });
    }

    function startMarquee() {
        var marqueeElements = document.querySelectorAll('.marquee');
        marqueeElements.forEach(function (element) {
            element.style.animationPlayState = 'running';
        });
    }


</script>
<!-- Include SweetAlert2 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<!-- Include SweetAlert2 JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var showInfoButton = document.getElementById('showInfoButton');
        showInfoButton.addEventListener('click', function (event) {
            event.preventDefault(); // Prevent the default button behavior (postback or navigation)
            showInformationSteps();
        });
    });

    function showInformationSteps() {
        Swal.fire({
            title: 'تعليمات التسجيل',
            html: '<h3 style="color:orangered">تعليمات التسجيل لأول مرة</h3><br/>' +
                '<ol style="text-align: justify;font-size: smaller;">' +
                '<li>الضغط على زر "انشاء مستخدم جديد"</li>' +
                '<li>تعبئة المعلومات الخاصة بالطالب والتأكد جيداً من "رقم الهاتف" و"كلمة المرور" قبل عملية الحفظ</li>' +
                '<p style="color:red;">**ملاحظة رقم الهاتف مهم جدا لانه سيكون المعرف الوحيد للطالب لذلك تأكد من رقم الهاتف جيداً</p>' +
                '<li>اضغط على زر انشاء</li>' +
                '</ol>' +
                '<h3 style="color:limegreen">تعليمات الدخول لطالب مسجل بالفعل</h3><br/>' +
                '<ol style="text-align: justify;font-size: smaller;">' +
                '<li>ادخل "رقم الهاتف "</li>' +
                '<li>ادخل "كلمة المرور"</li>' +
                '<li>اضغط زر تسجيل الدخول</li>' +
                '<li>انتقل الى التسجيل في المواد في حال شراء بطاقة جديدة</li>' +
                '<li>ادخل رقم البطاقة وكلمة المرور للبطاقة</li>' +
                '<li>اختر المادة / المواد والفصل</li>' +
                '<li>اختر المستوى المطلوب</li>' +
                '<li>ثم انقر على تسجيل</li>' +
                '<li>في حال التسجيل المسبق لمادة/مواد الانتقال الى خانة دروس الطالب مباشرة</li>' +
                '</ol>',
            confirmButtonText: 'تم!',
            icon: 'info'
        });
    }
</script>
